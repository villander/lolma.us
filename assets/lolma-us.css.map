{
	"version": 3,
	"sourceRoot": "/home/lolmaus/Code/lolma-us/app/styles",
	"file": "lolma-us.css",
	"sources": [
		"../../sass_compiler-input_base_path-vTZgikXQ.tmp/0/app/styles/app.scss",
		"../../sass_compiler-input_base_path-vTZgikXQ.tmp/0/app/styles/_config.sass",
		"../../../node_modules/sass-config-manager-mk2/_config-manager.sass",
		"../../../node_modules/sass-config-manager-mk2/_config-manager-utils.sass",
		"../../sass_compiler-input_base_path-vTZgikXQ.tmp/0/app/styles/config/breakpoints.sass",
		"../../../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/_settings.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/_context.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/_helpers.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/_parsers.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/parsers/_query.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/parsers/_single.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/parsers/single/_default.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/parsers/_double.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/parsers/double/_default-pair.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/parsers/double/_double-string.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/parsers/double/_default.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/parsers/_triple.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/parsers/triple/_default.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/parsers/_resolution.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/parsers/resolution/_resolution.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/_no-query.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/_respond-to.scss",
		"../../../node_modules/breakpoint-sass/stylesheets/breakpoint/_legacy-settings.scss",
		"../../sass_compiler-input_base_path-vTZgikXQ.tmp/0/app/styles/config/themes.sass",
		"../../sass_compiler-input_base_path-vTZgikXQ.tmp/0/app/styles/config/themes/dark.sass",
		"../../sass_compiler-input_base_path-vTZgikXQ.tmp/0/app/styles/config/themes/light.sass",
		"../../sass_compiler-input_base_path-vTZgikXQ.tmp/0/app/styles/_global.sass",
		"../../../node_modules/sass-toolkit/stylesheets/toolkit/_reset.scss",
		"../../../node_modules/sass-toolkit/stylesheets/toolkit/_kickstart.scss",
		"../../../app/styles/helpers/theme.sass",
		"../../../app/styles/helpers/copy.sass",
		"../../../app/styles/helpers/headings.sass",
		"../../sass_compiler-input_base_path-vTZgikXQ.tmp/0/app/styles/_components.sass",
		"../../../app/pods/components/hero-header/style.sass",
		"../../../node_modules/breakpoint-slicer/stylesheets/_breakpoint-slicer.sass",
		"../../../node_modules/breakpoint-slicer/stylesheets/breakpoint-slicer/_variables.sass",
		"../../../node_modules/breakpoint-slicer/stylesheets/breakpoint-slicer/_helper-functions.sass",
		"../../../node_modules/breakpoint-slicer/stylesheets/breakpoint-slicer/_mixins.sass",
		"../../../app/pods/components/locale-switcher/style.sass",
		"../../../app/pods/components/markdown-block/style.sass",
		"../../../app/pods/components/online-presence/style.sass",
		"../../../app/pods/components/pro-ject/style.sass",
		"../../../app/pods/components/pro-jects/style.sass",
		"../../../app/pods/components/project-group/style.sass",
		"../../../app/pods/components/sec-tion/style.sass",
		"../../../app/pods/components/star-button/style.sass",
		"../../../node_modules/sass-toolkit/stylesheets/toolkit/_triangle.scss",
		"../../../app/pods/components/time-line/style.sass",
		"../../../app/pods/locale/index/style.sass"
	],
	"sourcesContent": [
		"@import 'config';\n@import 'global';\n@import 'components';\n",
		"@import \"node_modules/sass-config-manager-mk2/config-manager\";\n\n@import \"config/breakpoints\";\n@import \"config/themes\";\n\n",
		"$-config-storage:         () !default !global;\n$-config-storage-default: () !default !global;\n\n@import \"./config-manager-utils\";\n\n\n\n@mixin config-set($key, $value, $default: false) {\n  @if $default {\n    $-config-storage-default: -config-map-set($-config-storage-default, $key, $value) !global; }\n  @else {\n    $-config-storage:         -config-map-set($-config-storage,         $key, $value) !global; } }\n\n\n\n@mixin config-remove($paths, $default: false) {\n  @if length($paths) == 1 {\n    $settings: nth($paths, 1); }\n\n  @each $path in $paths {\n    @if $default {\n      $-config-storage-default: map-remove($-config-storage-default, $path) !global; }\n    @else {\n      $-config-storage:         map-remove($-config-storage,         $path) !global; } } }\n",
		"@function -config-str-split($string, $delimiter: \"\") {\n  $result: ();\n  $length: str-length($string);\n\n  @if str-length($delimiter) == 0 {\n    @for $i from 1 through $length {\n      $result: append($result, str-slice($string, $i, $i)); }\n    @return $result; }\n\n  $break: false;\n\n  @while not $break {\n    $index: str-index($string, $delimiter);\n    @if not $index or $index == 0 {\n      $break: true; }\n    @else {\n      $part:   if($index != 1, str-slice($string, 1, $index - 1), \"\");\n      $result: append($result, $part);\n      $string: str-slice($string, $index + str-length($delimiter)); } }\n\n  @return append($result, $string); }\n\n\n\n\n@function -config-list-map-check($list) {\n  @if length($list) == 2 and length(nth($list, 1)) == 1 {\n    @return append((), $list, \"comma\"); }\n  @return $list; }\n\n\n\n\n@function -config-map-has($map, $key) {\n  $keys:  -config-str-split($key, '.');\n  $value: -config-list-map-check($map);\n\n  @each $key in $keys {\n    @if type-of($value) != \"map\" or not map-has-key($value, $key) {\n      @return false; }\n\n    $value: map-get($value, $key); }\n\n  @return true; }\n\n\n\n\n@function -config-map-get($map, $path) {\n  $keys:  -config-str-split($path, '.');\n  $value: -config-list-map-check($map);\n\n  @each $key in $keys {\n    @if type-of($value) != \"map\" or not map-has-key($value, $key) {\n      @warn \"config-get: path '#{$path}' doesn\\'t exist.\";\n      @return null; }\n\n    $value: map-get($value, $key); }\n\n  @return $value; }\n\n\n\n\n@function -config-str-join($list, $delimiter: \"\") {\n  $result: \"\";\n\n  @if length($list) == 0 {\n    @return $result; }\n\n  @if length($list) > 1 {\n    @for $i from 1 through length($list) - 1 {\n      $result: $result + nth($list, $i) + $delimiter; } }\n\n  @return $result + nth($list, length($list)); }\n\n\n\n\n@function -config-list-slice($list, $start: 1, $end: length($list)) {\n  $output: ();\n\n  @if $start >= 1 and $end >= $start {\n    @for $i from $start through $end {\n      $output: append($output, nth($list, $i)); } }\n\n  @return $output; }\n\n\n\n\n@function -config-map-merge($maps...) {\n  $result: nth($maps, 1);\n\n  @for $i from 1 through length($maps) - 1 {\n    @each $key, $value in nth($maps, $i + 1) {\n      @if type-of($result) != \"map\" {\n        $result: ($key: $value); }\n      @if type-of($value) == \"map\" {\n        $value: -config-map-merge(map-get($result, $key), $value); }\n      @if $key != null {\n        $result: map-merge($result, ($key: $value)); } } }\n\n  @return $result; }\n\n\n\n\n@function -config-map-set($map, $path, $value) {\n  $map:    -config-list-map-check($map);\n  $keys:   -config-str-split($path, '.');\n  $length: length($keys);\n  $result: (nth($keys, $length): $value);\n\n  @if $length > 1 {\n    @for $i from 1 through $length - 1 {\n      $path: \"\";\n      $key: nth($keys, 1);\n      $j: $length - $i;\n      $key: nth($keys, $j);\n      $path: -config-str-join(-config-list-slice($keys, 1, $j), '.');\n\n      @if -config-map-has($map, $path) {\n        $value: -config-map-get($map, $path);\n\n        @if type-of($value) == \"map\" {\n          $result: -config-map-merge(($key: $value), ($key: $result)); }\n        @else {\n          $result: ($key: $result); } }\n\n      @else {\n        $result: ($key: $result); } } }\n\n  @return -config-map-merge($map, $result); }\n\n\n\n\n@function config-get($key, $default: false) {\n\n  @if $default {\n    @if -config-map-has($-config-storage-default, $key) {\n      @return -config-map-get($-config-storage-default, $key); } }\n\n\n  @else {\n    @if -config-map-has($-config-storage, $key) {\n      @return -config-map-get($-config-storage, $key); }\n\n    @else if -config-map-has($-config-storage-default, $key) {\n      @return -config-map-get($-config-storage-default, $key); } }\n\n\n  @warn \"config-get: key '#{$key}' doesn't exist.\";\n  @return null; }\n\n\n\n\n@function config-has($key) {\n  @if -config-map-has($-config-storage, $key) or -config-map-has($-config-storage-default, $key) {\n    @return true; }\n\n  @return false; }\n",
		"@import \"node_modules/breakpoint-sass/stylesheets/breakpoint\";\n\n$slicer-breakpoints:      0 400px 600px 800px 1010px 1200px 1400px 1600px 1800px;\n$slicer-breakpoint-names: 'xxs' 'xs'  's'    'm'    'l'    'xl'   'xxl' 'xxxl';\n",
		"//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n",
		"//////////////////////////////\n// Has Setting\n//////////////////////////////\n@function breakpoint-has($setting) {\n  @if map-has-key($breakpoint, $setting) {\n    @return true;\n  }\n  @else {\n    @return false;\n  }\n}\n\n//////////////////////////////\n// Get Settings\n//////////////////////////////\n@function breakpoint-get($setting) {\n  @if breakpoint-has($setting) {\n    @return map-get($breakpoint, $setting);\n  }\n  @else {\n    @return map-get($Breakpoint-Settings, $setting);\n  }\n}\n\n//////////////////////////////\n// Set Settings\n//////////////////////////////\n@function breakpoint-set($setting, $value) {\n  @if (str-index($setting, '-') or str-index($setting, '_')) and str-index($setting, ' ') == null {\n    @warn \"Words in Breakpoint settings should be separated by spaces, not dashes or underscores. Please replace dashes and underscores between words with spaces. Settings will not work as expected until changed.\";\n  }\n  $breakpoint: map-merge($breakpoint, ($setting: $value)) !global;\n  @return true;\n}\n\n@mixin breakpoint-change($setting, $value) {\n  $breakpoint-change: breakpoint-set($setting, $value);\n}\n\n@mixin breakpoint-set($setting, $value) {\n  @include breakpoint-change($setting, $value);\n}\n\n@mixin bkpt-change($setting, $value) {\n  @include breakpoint-change($setting, $value);\n}\n@mixin bkpt-set($setting, $value) {\n  @include breakpoint-change($setting, $value);\n}\n\n//////////////////////////////\n// Remove Setting\n//////////////////////////////\n@function breakpoint-reset($settings...) {\n  @if length($settings) == 1 {\n    $settings: nth($settings, 1);\n  }\n\n  @each $setting in $settings {\n    $breakpoint: map-remove($breakpoint, $setting) !global;\n  }\n  @return true;\n}\n\n@mixin breakpoint-reset($settings...) {\n  $breakpoint-reset: breakpoint-reset($settings);\n}\n\n@mixin bkpt-reset($settings...) {\n  $breakpoint-reset: breakpoint-reset($settings);\n}",
		"//////////////////////////////\n// Private Breakpoint Variables\n//////////////////////////////\n$private-breakpoint-context-holder: ();\n$private-breakpoint-query-count: 0 !default;\n\n//////////////////////////////\n// Breakpoint Has Context\n// Returns whether or not you are inside a Breakpoint query\n//////////////////////////////\n@function breakpoint-has-context() {\n  @if length($private-breakpoint-query-count) {\n    @return true;\n  }\n  @else {\n    @return false;\n  }\n}\n\n//////////////////////////////\n// Breakpoint Get Context\n// $feature: Input feature to get it's current MQ context. Returns false if no context\n//////////////////////////////\n@function breakpoint-get-context($feature) {\n  @if map-has-key($private-breakpoint-context-holder, $feature) {\n    $get: map-get($private-breakpoint-context-holder, $feature);\n    // Special handling of no-query from get side so /false/ prepends aren't returned\n    @if $feature == 'no-query' {\n      @if type-of($get) == 'list' and length($get) > 1 and nth($get, 1) == false {\n        $get: nth($get, length($get));\n      }\n    }\n    @return $get;\n  }\n  @else {\n    @if breakpoint-has-context() and $feature == 'media' {\n      @return breakpoint-get('default media');\n    }\n    @else {\n      @return false;\n    }\n  }\n}\n\n//////////////////////////////\n// Private function to set context\n//////////////////////////////\n@function private-breakpoint-set-context($feature, $value) {\n  @if $value == 'monochrome' {\n    $feature: 'monochrome';\n  }\n\n  $current: map-get($private-breakpoint-context-holder, $feature);\n  @if $current and length($current) == $private-breakpoint-query-count {\n    @warn \"You have already queried against `#{$feature}`. Unexpected things may happen if you query against the same feature more than once in the same `and` query. Breakpoint is overwriting the current context with `#{$value}`\";\n  }\n\n  @if not map-has-key($private-breakpoint-context-holder, $feature) {\n    $v-holder: ();\n    @for $i from 1 to $private-breakpoint-query-count {\n      @if $feature == 'media' {\n        $v-holder: append($v-holder, breakpoint-get('default media'));\n      }\n      @else {\n        $v-holder: append($v-holder, false);\n      }\n    }\n    $v-holder: append($v-holder, $value);\n    $private-breakpoint-context-holder: map-merge($private-breakpoint-context-holder, ($feature: $v-holder)) !global;\n  }\n  @else {\n    $v-holder: map-get($private-breakpoint-context-holder, $feature);\n    $length: length($v-holder);\n    @for $i from $length to $private-breakpoint-query-count - 1 {\n      @if $feature == 'media' {\n        $v-holder: append($v-holder, breakpoint-get('default media'));\n      }\n      @else {\n        $v-holder: append($v-holder, false);\n      }\n    }\n    $v-holder: append($v-holder, $value);\n    $private-breakpoint-context-holder: map-merge($private-breakpoint-context-holder, ($feature: $v-holder)) !global;\n  }\n\n  @return true;\n}\n\n//////////////////////////////\n// Private function to reset context\n//////////////////////////////\n@mixin private-breakpoint-reset-contexts {\n  $private-breakpoint-context-holder: () !global;\n  $private-breakpoint-query-count: 0 !global;\n}",
		"//////////////////////////////\n// Converts the input value to Base EMs\n//////////////////////////////\n@function breakpoint-to-base-em($value) {\n  $value-unit: unit($value);\n\n  // Will convert relative EMs into root EMs.\n  @if breakpoint-get('base font size') and type-of(breakpoint-get('base font size')) == 'number' and $value-unit == 'em' {\n    $base-unit: unit(breakpoint-get('base font size'));\n\n    @if $base-unit == 'px' or $base-unit == '%' or $base-unit == 'em' or $base-unit == 'pt' {\n      @return base-conversion($value) / base-conversion(breakpoint-get('base font size')) * 1em;\n    }\n    @else {\n      @warn '#{breakpoint-get(\\'base font size\\')} is not set in valid units for font size!';\n      @return false;\n    }\n  }\n  @else {\n    @return base-conversion($value);\n  }\n}\n\n@function base-conversion($value) {\n  $unit: unit($value);\n\n  @if $unit == 'px' {\n    @return $value / 16px * 1em;\n  }\n  @else if $unit == '%' {\n    @return $value / 100% * 1em;\n  }\n  @else if $unit == 'em' {\n    @return $value;\n  }\n  @else if $unit == 'pt' {\n    @return $value / 12pt * 1em;\n  }\n  @else {\n    @return $value;\n//    @warn 'Everything is terrible! What have you done?!';\n  }\n}\n\n//////////////////////////////\n// Returns whether the feature can have a min/max pair\n//////////////////////////////\n$breakpoint-min-max-features: 'color',\n                              'color-index',\n                              'aspect-ratio',\n                              'device-aspect-ratio',\n                              'device-height',\n                              'device-width',\n                              'height',\n                              'monochrome',\n                              'resolution',\n                              'width';\n\n@function breakpoint-min-max($feature) {\n  @each $item in $breakpoint-min-max-features {\n    @if $feature == $item {\n      @return true;\n    }\n  }\n  @return false;\n}\n\n//////////////////////////////\n// Returns whether the feature can have a string value\n//////////////////////////////\n$breakpoint-string-features:  'orientation',\n                              'scan',\n                              'color',\n                              'aspect-ratio',\n                              'device-aspect-ratio',\n                              'pointer',\n                              'luminosity';\n\n@function breakpoint-string-value($feature) {\n  @each $item in $breakpoint-string-features {\n    @if breakpoint-min-max($item) {\n      @if $feature == 'min-#{$item}' or $feature == 'max-#{$item}' {\n        @return true;\n      }\n    }\n    @else if $feature == $item {\n      @return true;\n    }\n  }\n  @return false;\n}\n\n//////////////////////////////\n// Returns whether the feature is a media type\n//////////////////////////////\n$breakpoint-media-types:  'all',\n                          'braille',\n                          'embossed',\n                          'handheld',\n                          'print',\n                          'projection',\n                          'screen',\n                          'speech',\n                          'tty',\n                          'tv';\n\n@function breakpoint-is-media($feature) {\n  @each $media in $breakpoint-media-types {\n    @if ($feature == $media) or ($feature == 'not #{$media}') or ($feature == 'only #{$media}') {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n\n//////////////////////////////\n// Returns whether the feature can stand alone\n//////////////////////////////\n$breakpoint-single-string-features: 'color',\n                                    'color-index',\n                                    'grid',\n                                    'monochrome';\n\n@function breakpoint-single-string($feature) {\n  @each $item in $breakpoint-single-string-features {\n    @if $feature == $item {\n      @return true;\n    }\n  }\n  @return false;\n}\n\n//////////////////////////////\n// Returns whether the feature\n//////////////////////////////\n@function breakpoint-is-resolution($feature) {\n  $resolutions: 'device-pixel-ratio', 'dpr';\n\n  @if breakpoint-get('transform resolutions') {\n    $resolutions: append($resolutions, 'resolution');\n  }\n\n  @each $reso in $resolutions {\n    @if index($feature, $reso) or index($feature, 'min-#{$reso}') or index($feature, 'max-#{$reso}') {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n",
		"//////////////////////////////\n// Import Parser Pieces\n//////////////////////////////\n@import \"parsers/query\";\n@import \"parsers/single\";\n@import \"parsers/double\";\n@import \"parsers/triple\";\n@import \"parsers/resolution\";\n\n$Memo-Exists: function-exists(memo-get) and function-exists(memo-set);\n\n//////////////////////////////\n// Breakpoint Function\n//////////////////////////////\n@function breakpoint($query, $contexts...) {\n  $run: true;\n  $return: ();\n\n  // Grab the Memo Output if Memoization can be a thing\n  @if $Memo-Exists {\n    $return: memo-get(breakpoint, breakpoint $query $contexts);\n\n    @if $return != null {\n      $run: false;\n    }\n  }\n\n  @if not $Memo-Exists or $run {\n    // Internal Variables\n    $query-string: '';\n    $query-fallback: false;\n    $return: ();\n\n    // Reserve Global Private Breakpoint Context\n    $holder-context: $private-breakpoint-context-holder;\n    $holder-query-count: $private-breakpoint-query-count;\n\n    // Reset Global Private Breakpoint Context\n    $private-breakpoint-context-holder: () !global;\n    $private-breakpoint-query-count: 0 !global;\n\n\n    // Test to see if it's a comma-separated list\n    $or-list: if(list-separator($query) == 'comma', true, false);\n\n\n    @if ($or-list == false and breakpoint-get('legacy syntax') == false) {\n      $query-string: breakpoint-parse($query);\n    }\n    @else {\n      $length: length($query);\n\n      $last: nth($query, $length);\n      $query-fallback: breakpoint-no-query($last);\n\n      @if ($query-fallback != false) {\n        $length: $length - 1;\n      }\n\n      @if (breakpoint-get('legacy syntax') == true) {\n        $mq: ();\n\n        @for $i from 1 through $length {\n          $mq: append($mq, nth($query, $i), comma);\n        }\n\n        $query-string: breakpoint-parse($mq);\n      }\n      @else {\n        $query-string: '';\n        @for $i from 1 through $length {\n          $query-string: $query-string + if($i == 1, '', ', ') + breakpoint-parse(nth($query, $i));\n        }\n      }\n    }\n\n    $return: ('query': $query-string,\n        'fallback': $query-fallback,\n        'context holder': $private-breakpoint-context-holder,\n        'query count': $private-breakpoint-query-count\n    );\n    @if length($contexts) > 0 and nth($contexts, 1) != false {\n      @if $query-fallback != false {\n        $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n      }\n      $context-map: ();\n      @each $context in $contexts {\n        $context-map: map-merge($context-map, ($context: breakpoint-get-context($context)));\n      }\n      $return: map-merge($return, (context: $context-map));\n    }\n\n    // Reset Global Private Breakpoint Context\n    $private-breakpoint-context-holder: () !global;\n    $private-breakpoint-query-count: 0 !global;\n\n    @if $Memo-Exists {\n      $holder: memo-set(breakpoint, breakpoint $query $contexts, $return);\n    }\n  }\n\n  @return $return;\n}\n\n//////////////////////////////\n// General Breakpoint Parser\n//////////////////////////////\n@function breakpoint-parse($query) {\n  // Increase number of 'and' queries\n  $private-breakpoint-query-count: $private-breakpoint-query-count + 1 !global;\n\n  // Set up Media Type\n  $query-print: '';\n\n  $force-all: ((breakpoint-get('force all media type') == true) and (breakpoint-get('default media') == 'all'));\n  $empty-media: true;\n  @if ($force-all == true) or (breakpoint-get('default media') != 'all') {\n    // Force the print of the default media type if (force all is true and default media type is all) or (default media type is not all)\n    $query-print: breakpoint-get('default media');\n    $empty-media: false;\n  }\n\n\n  $query-resolution: false;\n\n  $query-holder: breakpoint-parse-query($query);\n\n\n\n  // Loop over each parsed out query and write it to $query-print\n  $first: true;\n\n  @each $feature in $query-holder {\n    $length: length($feature);\n\n    // Parse a single feature\n    @if ($length == 1) {\n      // Feature is currently a list, grab the actual value\n      $feature: nth($feature, 1);\n\n      // Media Type must by convention be the first item, so it's safe to flat override $query-print, which right now should only be the default media type\n      @if (breakpoint-is-media($feature)) {\n        @if ($force-all == true) or ($feature != 'all') {\n          // Force the print of the default media type if (force all is true and default media type is all) or (default media type is not all)\n          $query-print: $feature;\n          $empty-media: false;\n\n          // Set Context\n          $context-setter: private-breakpoint-set-context(media, $query-print);\n        }\n      }\n      @else {\n        $parsed: breakpoint-parse-single($feature, $empty-media, $first);\n        $query-print: '#{$query-print} #{$parsed}';\n        $first: false;\n      }\n    }\n    // Parse a double feature\n    @else if ($length == 2) {\n      @if (breakpoint-is-resolution($feature) != false) {\n        $query-resolution: $feature;\n      }\n      @else {\n        $parsed: null;\n        // If it's a string/number pair,\n        // we check to see if one is a single-string value,\n        // then we parse it as a normal double\n        $alpha: nth($feature, 1);\n        $beta: nth($feature, 2);\n        @if breakpoint-single-string($alpha) or breakpoint-single-string($beta) {\n          $parsed: breakpoint-parse-single($alpha, $empty-media, $first);\n          $query-print: '#{$query-print} #{$parsed}';\n          $first: false;\n          $parsed: breakpoint-parse-single($beta, $empty-media, $first);\n          $query-print: '#{$query-print} #{$parsed}';\n        }\n        @else {\n          $parsed: breakpoint-parse-double($feature, $empty-media, $first);\n          $query-print: '#{$query-print} #{$parsed}';\n          $first: false;\n        }\n      }\n    }\n    // Parse a triple feature\n    @else if ($length == 3) {\n      $parsed: breakpoint-parse-triple($feature, $empty-media, $first);\n      $query-print: '#{$query-print} #{$parsed}';\n      $first: false;\n    }\n\n  }\n\n  @if ($query-resolution != false) {\n    $query-print: breakpoint-build-resolution($query-print, $query-resolution, $empty-media, $first);\n  }\n\n  // Loop through each feature that's been detected so far and append 'false' to the the value list to increment their counters\n  @each $f, $v in $private-breakpoint-context-holder {\n    $v-holder: $v;\n    $length: length($v-holder);\n    @if length($v-holder) < $private-breakpoint-query-count {\n      @for $i from $length to $private-breakpoint-query-count {\n        @if $f == 'media' {\n          $v-holder: append($v-holder, breakpoint-get('default media'));\n        }\n        @else {\n          $v-holder: append($v-holder, false);\n        }\n      }\n    }\n    $private-breakpoint-context-holder: map-merge($private-breakpoint-context-holder, ($f: $v-holder)) !global;\n  }\n\n  @return $query-print;\n}\n",
		"@function breakpoint-parse-query($query) {\n  // Parse features out of an individual query\n  $feature-holder: ();\n  $query-holder: ();\n  $length: length($query);\n\n  @if $length == 2 {\n    // If we've got a string/number, number/string, check to see if it's a valid string/number pair or two singles\n    @if (type-of(nth($query, 1)) == 'string' and type-of(nth($query, 2)) == 'number') or (type-of(nth($query, 1)) == 'number' and type-of(nth($query, 2)) == 'string') {\n\n      $number: '';\n      $value: '';\n\n      @if type-of(nth($query, 1)) == 'string' {\n        $number: nth($query, 2);\n        $value: nth($query, 1);\n      }\n      @else {\n        $number: nth($query, 1);\n        $value: nth($query, 2);\n      }\n\n      // If the string value can be a single value, check to see if the number passed in is a valid input for said single value. Fortunately, all current single-value options only accept unitless numbers, so this check is easy.\n      @if breakpoint-single-string($value) {\n        @if unitless($number) {\n          $feature-holder: append($value, $number, space);\n          $query-holder: append($query-holder, $feature-holder, comma);\n          @return $query-holder;\n        }\n      }\n      // If the string is a media type, split the query\n      @if breakpoint-is-media($value) {\n        $query-holder: append($query-holder, nth($query, 1));\n        $query-holder: append($query-holder, nth($query, 2));\n        @return $query-holder;\n      }\n      // If it's not a single feature, we're just going to assume it's a proper string/value pair, and roll with it.\n      @else {\n        $feature-holder: append($value, $number, space);\n        $query-holder: append($query-holder, $feature-holder, comma);\n        @return $query-holder;\n      }\n\n    }\n    // If they're both numbers, we assume it's a double and roll with that\n    @else if (type-of(nth($query, 1)) == 'number' and type-of(nth($query, 2)) == 'number') {\n      $feature-holder: append(nth($query, 1), nth($query, 2), space);\n      $query-holder: append($query-holder, $feature-holder, comma);\n      @return $query-holder;\n    }\n    // If they're both strings and neither are singles, we roll with that.\n    @else if (type-of(nth($query, 1)) == 'string' and type-of(nth($query, 2)) == 'string') {\n      @if not breakpoint-single-string(nth($query, 1)) and not breakpoint-single-string(nth($query, 2)) {\n        $feature-holder: append(nth($query, 1), nth($query, 2), space);\n        $query-holder: append($query-holder, $feature-holder, comma);\n        @return $query-holder;\n      }\n    }\n  }\n  @else if $length == 3 {\n    // If we've got three items and none is a list, we check to see\n    @if type-of(nth($query, 1)) != 'list' and type-of(nth($query, 2)) != 'list' and type-of(nth($query, 3)) != 'list' {\n      // If none of the items are single string values and none of the values are media values, we're good.\n      @if (not breakpoint-single-string(nth($query, 1)) and not breakpoint-single-string(nth($query, 2)) and not breakpoint-single-string(nth($query, 3))) and  ((not breakpoint-is-media(nth($query, 1)) and not breakpoint-is-media(nth($query, 2)) and not breakpoint-is-media(nth($query, 3)))) {\n        $feature-holder: append(nth($query, 1), nth($query, 2), space);\n        $feature-holder: append($feature-holder, nth($query, 3), space);\n        $query-holder: append($query-holder, $feature-holder, comma);\n        @return $query-holder;\n      }\n      // let's check to see if the first item is a media type\n      @else if breakpoint-is-media(nth($query, 1)) {\n        $query-holder: append($query-holder, nth($query, 1));\n        $feature-holder: append(nth($query, 2), nth($query, 3), space);\n        $query-holder: append($query-holder, $feature-holder);\n        @return $query-holder;\n      }\n    }\n  }\n\n  // If it's a single item, or if it's not a special case double or triple, we can simply return the query.\n  @return $query;\n}\n",
		"//////////////////////////////\n// Import Pieces\n//////////////////////////////\n@import \"single/default\";\n\n@function breakpoint-parse-single($feature, $empty-media, $first) {\n  $parsed: '';\n  $leader: '';\n  // If we're forcing\n  @if not ($empty-media) or not ($first) {\n    $leader: 'and ';\n  }\n\n  // If it's a single feature that can stand alone, we let it\n  @if (breakpoint-single-string($feature)) {\n    $parsed: $feature;\n    // Set Context\n    $context-setter: private-breakpoint-set-context($feature, $feature);\n  }\n  // If it's not a stand alone feature, we pass it off to the default handler.\n  @else {\n    $parsed: breakpoint-parse-default($feature);\n  }\n\n  @return $leader + '(' + $parsed + ')';\n}\n",
		"@function breakpoint-parse-default($feature) {\n  $default: breakpoint-get('default feature');\n\n  // Set Context\n  $context-setter: private-breakpoint-set-context($default, $feature);\n\n  @if (breakpoint-get('to ems') == true) and (type-of($feature) == 'number') {\n    @return '#{$default}: #{breakpoint-to-base-em($feature)}';\n  }\n  @else {\n    @return '#{$default}: #{$feature}';\n  }\n}\n",
		"//////////////////////////////\n// Import Pieces\n//////////////////////////////\n@import \"double/default-pair\";\n@import \"double/double-string\";\n@import \"double/default\";\n\n@function breakpoint-parse-double($feature, $empty-media, $first) {\n  $parsed: '';\n  $leader: '';\n  // If we're forcing\n  @if not ($empty-media) or not ($first) {\n    $leader: 'and ';\n  }\n\n  $first: nth($feature, 1);\n  $second: nth($feature, 2);\n\n  // If we've got two numbers, we know we need to use the default pair because there are no media queries that has a media feature that is a number\n  @if type-of($first) == 'number' and type-of($second) == 'number' {\n    $parsed: breakpoint-parse-default-pair($first, $second);\n  }\n  // If they are both strings, we send it through the string parser\n  @else if type-of($first) == 'string' and type-of($second) == 'string' {\n    $parsed: breakpoint-parse-double-string($first, $second);\n  }\n  // If it's a string/number pair, we parse it as a normal double\n  @else {\n    $parsed: breakpoint-parse-double-default($first, $second);\n  }\n\n  @return $leader + $parsed;\n}\n",
		"@function breakpoint-parse-default-pair($first, $second) {\n  $default: breakpoint-get('default pair');\n  $min: '';\n  $max: '';\n\n  // Sort into min and max\n  $min: min($first, $second);\n  $max: max($first, $second);\n\n  // Set Context\n  $context-setter: private-breakpoint-set-context(min-#{$default}, $min);\n  $context-setter: private-breakpoint-set-context(max-#{$default}, $max);\n\n  // Make them EMs if need be\n  @if (breakpoint-get('to ems') == true) {\n    $min: breakpoint-to-base-em($min);\n    $max: breakpoint-to-base-em($max);\n  }\n\n  @return '(min-#{$default}: #{$min}) and (max-#{$default}: #{$max})';\n}\n",
		"@function breakpoint-parse-double-string($first, $second) {\n  $feature: '';\n  $value: '';\n\n  // Test to see which is the feature and which is the value\n  @if (breakpoint-string-value($first) == true) {\n    $feature: $first;\n    $value: $second;\n  }\n  @else if (breakpoint-string-value($second) == true) {\n    $feature: $second;\n    $value: $first;\n  }\n  @else {\n    @warn \"Neither #{$first} nor #{$second} is a valid media query name.\";\n  }\n\n  // Set Context\n  $context-setter: private-breakpoint-set-context($feature, $value);\n\n  @return '(#{$feature}: #{$value})';\n}",
		"@function breakpoint-parse-double-default($first, $second) {\n  $feature: '';\n  $value: '';\n\n  @if type-of($first) == 'string' {\n    $feature: $first;\n    $value: $second;\n  }\n  @else {\n    $feature: $second;\n    $value: $first;\n  }\n\n  // Set Context\n  $context-setter: private-breakpoint-set-context($feature, $value);\n\n  @if (breakpoint-get('to ems') == true) {\n    $value: breakpoint-to-base-em($value);\n  }\n\n  @return '(#{$feature}: #{$value})'\n}\n",
		"//////////////////////////////\n// Import Pieces\n//////////////////////////////\n@import \"triple/default\";\n\n@function breakpoint-parse-triple($feature, $empty-media, $first) {\n  $parsed: '';\n  $leader: '';\n\n  // If we're forcing\n  @if not ($empty-media) or not ($first) {\n    $leader: 'and ';\n  }\n\n  // separate the string features from the value numbers\n  $string: null;\n  $numbers: null;\n  @each $val in $feature {\n    @if type-of($val) == string {\n      $string: $val;\n    }\n    @else {\n      @if type-of($numbers) == 'null' {\n        $numbers: $val;\n      }\n      @else {\n        $numbers: append($numbers, $val);\n      }\n    }\n  }\n\n  $parsed: breakpoint-parse-triple-default($string, nth($numbers, 1), nth($numbers, 2));\n\n  @return $leader + $parsed;\n\n}\n",
		"@function breakpoint-parse-triple-default($feature, $first, $second) {\n\n  // Sort into min and max\n  $min: min($first, $second);\n  $max: max($first, $second);\n\n  // Set Context\n  $context-setter: private-breakpoint-set-context(min-#{$feature}, $min);\n  $context-setter: private-breakpoint-set-context(max-#{$feature}, $max);\n\n  // Make them EMs if need be\n  @if (breakpoint-get('to ems') == true) {\n    $min: breakpoint-to-base-em($min);\n    $max: breakpoint-to-base-em($max);\n  }\n\n  @return '(min-#{$feature}: #{$min}) and (max-#{$feature}: #{$max})';\n}\n",
		"@import \"resolution/resolution\";\n\n@function breakpoint-build-resolution($query-print, $query-resolution, $empty-media, $first) {\n  $leader: '';\n  // If we're forcing\n  @if not ($empty-media) or not ($first) {\n    $leader: 'and ';\n  }\n\n  @if breakpoint-get('transform resolutions') and $query-resolution {\n    $resolutions: breakpoint-make-resolutions($query-resolution);\n    $length: length($resolutions);\n    $query-holder: '';\n\n    @for $i from 1 through $length {\n      $query: '#{$query-print} #{$leader}#{nth($resolutions, $i)}';\n      @if $i == 1 {\n        $query-holder: $query;\n      }\n      @else {\n        $query-holder: '#{$query-holder}, #{$query}';\n      }\n    }\n\n    @return $query-holder;\n  }\n  @else {\n    // Return with attached resolution\n    @return $query-print;\n  }\n}\n",
		"@function breakpoint-make-resolutions($resolution) {\n  $length: length($resolution);\n\n  $output: ();\n\n  @if $length == 2 {\n    $feature: '';\n    $value: '';\n\n    // Find which is number\n    @if type-of(nth($resolution, 1)) == 'number' {\n      $value: nth($resolution, 1);\n    }\n    @else {\n      $value: nth($resolution, 2);\n    }\n\n    // Determine min/max/standard\n    @if index($resolution, 'min-resolution') {\n      $feature: 'min-';\n    }\n    @else if index($resolution, 'max-resolution') {\n      $feature: 'max-';\n    }\n\n    $standard: '(#{$feature}resolution: #{$value})';\n\n    // If we're not dealing with dppx,\n    @if unit($value) != 'dppx' {\n      $base: 96dpi;\n      @if unit($value) == 'dpcm' {\n        $base: 243.84dpcm;\n      }\n      // Write out feature tests\n      $webkit: '';\n      $moz: '';\n      $webkit: '(-webkit-#{$feature}device-pixel-ratio: #{$value / $base})';\n      $moz: '(#{$feature}-moz-device-pixel-ratio: #{$value / $base})';\n      // Append to output\n      $output: append($output, $standard, space);\n      $output: append($output, $webkit, space);\n      $output: append($output, $moz, space);\n    }\n    @else {\n      $webkit: '';\n      $moz: '';\n      $webkit: '(-webkit-#{$feature}device-pixel-ratio: #{$value / 1dppx})';\n      $moz: '(#{$feature}-moz-device-pixel-ratio: #{$value / 1dppx})';\n      $fallback: '(#{$feature}resolution: #{$value / 1dppx * 96dpi})';\n      // Append to output\n      $output: append($output, $standard, space);\n      $output: append($output, $webkit, space);\n      $output: append($output, $moz, space);\n      $output: append($output, $fallback, space);\n    }\n\n  }\n\n  @return $output;\n}\n",
		"@function breakpoint-no-query($query) {\n  @if type-of($query) == 'list' {\n    $keyword: nth($query, 1);\n\n    @if type-of($keyword) == 'string' and ($keyword == 'no-query' or $keyword == 'no query' or $keyword == 'fallback') {\n      @return nth($query, 2);\n    }\n    @else {\n      @return false;\n    }\n  }\n  @else {\n    @return false;\n  }\n}\n",
		"////////////////////////\n// Default the Breakpoints variable\n////////////////////////\n$breakpoints: () !default;\n$BREAKPOINTS: () !default;\n\n////////////////////////\n// Respond-to API Mixin\n////////////////////////\n@mixin respond-to($context, $no-query: false) {\n  @if length($breakpoints) > 0 and length($BREAKPOINTS) == 0 {\n    @warn \"In order to avoid variable namespace collisions, we have updated the way to add breakpoints for respond-to. Please change all instances of `$breakpoints: add-breakpoint()` to `@include add-breakpoint()`. The `add-breakpoint()` function will be deprecated in a future release.\";\n    $BREAKPOINTS: $breakpoints !global;\n    $breakpoints: () !global;\n  }\n\n  @if type-of($BREAKPOINTS) != 'map' {\n    // Just in case someone writes gibberish to the $breakpoints variable.\n    @warn \"Your breakpoints aren't a map! `respond-to` expects a map. Please check the value of $BREAKPOINTS variable.\";\n    @content;\n  }\n  @else if map-has-key($BREAKPOINTS, $context) {\n    @include breakpoint(map-get($BREAKPOINTS, $context), $no-query) {\n      @content;\n    }\n  }\n  @else if not map-has-key($BREAKPOINTS, $context) {\n    @warn \"`#{$context}` isn't a defined breakpoint! Please add it using `$breakpoints: add-breakpoint(`#{$context}`, $value);`\";\n    @content;\n  }\n  @else {\n    @warn \"You haven't created any breakpoints yet! Make some already! `@include add-breakpoint($name, $bkpt)`\";\n    @content;\n  }\n}\n\n//////////////////////////////\n// Add Breakpoint to Breakpoints\n// TODO: Remove function in next release\n//////////////////////////////\n@function add-breakpoint($name, $bkpt, $overwrite: false) {\n  $output: ($name: $bkpt);\n\n  @if length($breakpoints) == 0 {\n    @return $output;\n  }\n  @else {\n    @if map-has-key($breakpoints, $name) and $overwrite != true {\n      @warn \"You already have a breakpoint named `#{$name}`, please choose another breakpoint name, or pass in `$overwrite: true` to overwrite the previous breakpoint.\";\n      @return $breakpoints;\n    }\n    @else if not map-has-key($breakpoints, $name) or $overwrite == true {\n      @return map-merge($breakpoints, $output);\n    }\n  }\n}\n\n@mixin add-breakpoint($name, $bkpt, $overwrite: false) {\n  $output: ($name: $bkpt);\n\n  @if length($BREAKPOINTS) == 0 {\n    $BREAKPOINTS: $output !global;\n  }\n  @else {\n    @if map-has-key($BREAKPOINTS, $name) and $overwrite != true {\n      @warn \"You already have a breakpoint named `#{$name}`, please choose another breakpoint name, or pass in `$overwrite: true` to overwrite the previous breakpoint.\";\n      $BREAKPOINTS: $BREAKPOINTS !global;\n    }\n    @else if not map-has-key($BREAKPOINTS, $name) or $overwrite == true {\n      $BREAKPOINTS: map-merge($BREAKPOINTS, $output) !global;\n    }\n  }\n}\n\n@function get-breakpoint($name: false) {\n  @if $name == false {\n    @return $BREAKPOINTS;\n  }\n  @else {\n    @return map-get($BREAKPOINTS, $name);\n  }\n}\n",
		"@mixin legacy-settings-warning {\n  $legacyVars: (\n    'default-media': 'default media',\n    'default-feature': 'default feature',\n    'force-media-all': 'force all media type',\n    'to-ems': 'to ems',\n    'resolutions': 'transform resolutions',\n    'no-queries': 'no queries',\n    'no-query-fallbacks': 'no query fallbacks',\n    'base-font-size': 'base font size',\n    'legacy-syntax': 'legacy syntax'\n  );\n\n  @each $legacy, $new in $legacyVars {\n    @if global-variable-exists('breakpoint-' + $legacy) {\n      @warn \"In order to avoid variable namspace collisions, we have updated the way to change settings for Breakpoint. Please change all instances of `$breakpoint-#{$legacy}: {{setting}}` to `@include breakpoint-set('#{$new}', {{setting}})`. Variable settings, as well as this warning will be deprecated in a future release.\"\n    }\n  };\n\n  //////////////////////////////\n  // Hand correct each setting\n  //////////////////////////////\n  @if global-variable-exists('breakpoint-default-media') and $breakpoint-default-media != breakpoint-get('default media') {\n    @include breakpoint-set('default media', $breakpoint-default-media);\n  }\n  @if global-variable-exists('breakpoint-default-feature') and $breakpoint-default-feature != breakpoint-get('default feature') {\n    @include breakpoint-set('default feature', $breakpoint-default-feature);\n  }\n  @if global-variable-exists('breakpoint-force-media-all') and $breakpoint-force-media-all != breakpoint-get('force all media type') {\n    @include breakpoint-set('force all media type', $breakpoint-force-media-all);\n  }\n  @if global-variable-exists('breakpoint-to-ems') and $breakpoint-to-ems != breakpoint-get('to ems') {\n    @include breakpoint-set('to ems', $breakpoint-to-ems);\n  }\n  @if global-variable-exists('breakpoint-resolutions') and $breakpoint-resolutions != breakpoint-get('transform resolutions') {\n    @include breakpoint-set('transform resolutions', $breakpoint-resolutions);\n  }\n  @if global-variable-exists('breakpoint-no-queries') and $breakpoint-no-queries != breakpoint-get('no queries') {\n    @include breakpoint-set('no queries', $breakpoint-no-queries);\n  }\n  @if global-variable-exists('breakpoint-no-query-fallbacks') and $breakpoint-no-query-fallbacks != breakpoint-get('no query fallbacks') {\n    @include breakpoint-set('no query fallbacks', $breakpoint-no-query-fallbacks);\n  }\n  @if global-variable-exists('breakpoint-base-font-size') and $breakpoint-base-font-size != breakpoint-get('base font size') {\n    @include breakpoint-set('base font size', $breakpoint-base-font-size);\n  }\n  @if global-variable-exists('breakpoint-legacy-syntax') and $breakpoint-legacy-syntax != breakpoint-get('legacy syntax') {\n    @include breakpoint-set('legacy syntax', $breakpoint-legacy-syntax);\n  }\n}",
		"@import \"themes/dark\";\n@import \"themes/light\";\n",
		"@include config-set('lolma-us.themes.dark.bg1',           #0C0C0C);\n@include config-set('lolma-us.themes.dark.text',          #C9E9D3);\n@include config-set('lolma-us.themes.dark.bold',          #b2cfbb);\n@include config-set('lolma-us.themes.dark.label',         #AA9A66);\n@include config-set('lolma-us.themes.dark.heading1',      #B74934);\n@include config-set('lolma-us.themes.dark.heading2',      config-get('lolma-us.themes.dark.bold'));\n@include config-set('lolma-us.themes.dark.link.link',     #89b9e1);\n@include config-set('lolma-us.themes.dark.link.disabled', config-get('lolma-us.themes.dark.bold'));\n@include config-set('lolma-us.themes.dark.link.hover',    lighten(config-get('lolma-us.themes.dark.link.link'), 10%));\n@include config-set('lolma-us.themes.dark.link.active',   lighten(config-get('lolma-us.themes.dark.link.link'), 10%));\n@include config-set('lolma-us.themes.dark.link.visited',  darken(config-get('lolma-us.themes.dark.link.link'),  10%));\n",
		"@include config-set('lolma-us.themes.light.bg1',           white);\n@include config-set('lolma-us.themes.light.text',          #67655D);\n@include config-set('lolma-us.themes.light.bold',          #332C2F);\n@include config-set('lolma-us.themes.light.label',         #AA9A66);\n@include config-set('lolma-us.themes.light.heading1',      #B74934);\n@include config-set('lolma-us.themes.light.heading2',      config-get('lolma-us.themes.light.bold'));\n@include config-set('lolma-us.themes.light.link.link',     #577492);\n@include config-set('lolma-us.themes.light.link.disabled', config-get('lolma-us.themes.light.bold'));\n@include config-set('lolma-us.themes.light.link.hover',    lighten(config-get('lolma-us.themes.light.link.link'), 10%));\n@include config-set('lolma-us.themes.light.link.active',   lighten(config-get('lolma-us.themes.light.link.link'), 10%));\n@include config-set('lolma-us.themes.light.link.visited',  darken(config-get('lolma-us.themes.light.link.link'),  10%));\n",
		"@import \"node_modules/sass-toolkit/stylesheets/toolkit/reset\";\n@import \"app/styles/helpers/theme\";\n\n@import \"app/styles/helpers/copy\";\n\n@include copy;\n\nbody {\n  @include theme(light);\n  font-family: 'PT Sans', sans-serif;\n  line-height: 1.3; }\n\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: 'PT Sans Caption', sans-serif; }\n",
		"/*! Reset/normalize hybrid with major contributions from normalize.css, html5doctor.com Reset Stylesheet, and http://html5reset.org/\n\n* Sam Richard - http://snugug.com/\n* Nicholas Gallagher, Jonathan Neal - http://necolas.github.io/normalize.css/\n* Richard Clark - http://richclarkdesign.com\n* Tim Murtaugh - http://monkeydo.biz/\n*/\n\n//////////////////////////////\n// Basic reset\n//////////////////////////////\nabbr,\naddress,\narticle,\naside,\naudio,\nb,\nblockquote,\nbody,\ncanvas,\ncaption,\ncite,\ncode,\ndd,\ndel,\ndetails,\ndfn,\ndiv,\ndl,\ndt,\nem,\nfieldset,\nfigcaption,\nfigure,\nfooter,\nform,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nheader,\nhgroup,\nhtml,\ni,\niframe,\nimg,\nins,\nkbd,\nlabel,\nlegend,\nli,\nmark,\nmain,\nmenu,\nnav,\nobject,\nol,\np,\npre,\nq,\nsamp,\nsection,\nsmall,\nspan,\nstrong,\nsub,\nsummary,\nsup,\ntable,\ntbody,\ntd,\ntfoot,\nth,\nthead,\ntime,\ntr,\nul,\nvar,\nvideo {\n  background: transparent;\n  border: 0;\n  font-size: 100%;\n  margin: 0;\n  outline: 0;\n  padding: 0;\n  vertical-align: baseline;\n}\n\n//////////////////////////////\n// Prevent iOS text size adjust after orientation change, without disabling user zoom.\n//////////////////////////////\n\nhtml {\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\n\n//////////////////////////////\n// Resets body line height\n//////////////////////////////\n\nbody {\n  line-height: 1;\n}\n\n//////////////////////////////////////////////////////////////////////////\n// HTML5 display definitions\n//////////////////////////////////////////////////////////////////////////\n\n\n//////////////////////////////\n// Correct `block` display not defined for any HTML5 element in IE 8/9.\n// Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.\n// Correct `block` display not defined for `main` in IE 11.\n//////////////////////////////\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n//////////////////////////////\n// 1. Correct `inline-block` display not defined in IE 8/9.\n// 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n//////////////////////////////\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; // 1\n  vertical-align: baseline; // 2\n}\n\n//////////////////////////////\n// Prevent modern browsers from displaying `audio` without controls.\n// Remove excess height in iOS 5 devices.\n//////////////////////////////\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n//////////////////////////////\n// Address `[hidden]` styling not present in IE 8/9/10.\n// Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.\n//////////////////////////////\n\n[hidden],\ntemplate {\n  display: none;\n}\n\n//////////////////////////////////////////////////////////////////////////\n// Links\n//////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////\n// Remove the gray background color from active links in IE 10.\n//////////////////////////////\n\na {\n  background-color: transparent;\n  font-size: 100%;\n  margin: 0;\n  padding: 0;\n  vertical-align: baseline;\n}\n\n//////////////////////////////\n// Improve readability when focused and also mouse hovered in all browsers.\n//////////////////////////////\n\na:active,\na:hover {\n  outline: 0;\n}\n\n//////////////////////////////////////////////////////////////////////////\n// Text-level semantics\n//////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////\n// Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n//////////////////////////////\n\nabbr[title],\ndfn[title] {\n  border-bottom: 1px dotted;\n  cursor: help;\n}\n\n//////////////////////////////\n// Remove text decoration\n//////////////////////////////\n\nins {\n  text-decoration: none;\n}\n\n//////////////////////////////\n// Adds strikethrough\n//////////////////////////////\ndel {\n  text-decoration: line-through;\n}\n\n//////////////////////////////\n// Reset quotes for blockquote\n//////////////////////////////\n\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: '';\n  content: none;\n}\n\n//////////////////////////////\n// Remove list style for lists\n//////////////////////////////\nul {\n  list-style: none;\n}\n\n//////////////////////////////////////////////////////////////////////////\n// Embedded content\n//////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////\n// Remove border when inside `a` element in IE 8/9/10.\n//////////////////////////////\nimg {\n  border: 0;\n}\n\n//////////////////////////////\n// Correct overflow not hidden in IE 9/10/11.\n//////////////////////////////\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n//////////////////////////////////////////////////////////////////////////\n// Grouping content\n//////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////\n// 1. Contain overflow in all browsers.\n// 2. Pre-format text\n//////////////////////////////\n\npre {\n  overflow: auto; // 1\n  white-space: pre; // 2\n  white-space: pre-wrap; // 2\n  white-space: pre-line; // 2\n  word-wrap: break-word; // 2\n}\n\n//////////////////////////////\n// 1. Address odd `em`-unit font size rendering in all browsers.\n// 2. Ensure monospace font\n//////////////////////////////\n\ncode,\nkbd,\npre,\nsamp {\n  font-size: 1em; // 1\n  font-family: monospace, sans-serif;\n}\n\n//////////////////////////////\n// Address differences between Firefox and other browsers\n//////////////////////////////\n\nhr {\n  display: block;\n  height: 1px;\n  border: 0;\n  border-top: 1px solid;\n  margin: 1em 0;\n  padding: 0;\n}\n\n//////////////////////////////////////////////////////////////////////////\n// Forms\n//////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////\n// Known limitation: by default, Chrome and Safari on OS X allow very limited styling of `select`, unless a `border` property is set.\n//////////////////////////////\n\n//////////////////////////////\n// 1. Correct color not being inherited.\n//    Known issue: affects color of disabled elements.\n// 2. Correct font properties not being inherited.\n// 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n//////////////////////////////\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit; // 1\n  font: inherit; // 2\n  margin: 0; // 3\n}\n\n//////////////////////////////\n// Address `overflow` set to `hidden` in IE 8/9/10/11.\n//////////////////////////////\n\nbutton,\ninput[type=\"button\"] {\n  overflow: visible;\n}\n\n//////////////////////////////\n// Address inconsistent `text-transform` inheritance for `button` and `select`.\n// All other form control elements do not inherit `text-transform` values.\n// Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n// Correct `select` style inheritance in Firefox.\n//////////////////////////////\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n//////////////////////////////\n// 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls.\n// 2. Correct inability to style clickable `input` types in iOS.\n// 3. Improve usability and consistency of cursor style between image-type `input` and others.\n//////////////////////////////\n\nbutton,\nhtml input[type=\"button\"], // 1\ninput[type=\"file\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button; // 2\n  cursor: pointer; // 3\n}\n\n//////////////////////////////\n// Re-set default cursor for disabled elements.\n//////////////////////////////\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n//////////////////////////////\n// Remove inner padding and border in Firefox 4+.\n//////////////////////////////\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n//////////////////////////////\n// Address Firefox 4+ setting `line-height` on `input` using `!important` in the UA stylesheet.\n//////////////////////////////\n\ninput {\n  line-height: normal;\n}\n\n//////////////////////////////\n// It's recommended that you don't attempt to style these elements.\n// Firefox's implementation doesn't respect box-sizing, padding, or width.\n//\n// Removes excess padding in IE 8/9/10.\n//////////////////////////////\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  padding: 0;\n}\n\n//////////////////////////////\n// Fix the cursor style for Chrome's increment/decrement buttons. For certain `font-size` values of the `input`, it causes the cursor style of the decrement button to change from `default` to `text`.\n//////////////////////////////\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n//////////////////////////////\n// Remove inner padding and search cancel button in Safari and Chrome on OS X.\n// Safari (but not Chrome) clips the cancel button when the search input has padding (and `textfield` appearance).\n//////////////////////////////\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n//////////////////////////////\n// 1. Correct `color` not being inherited in IE 8/9/10/11.\n// 2. Remove padding so people aren't caught out if they zero out fieldsets.\n//////////////////////////////\n\nlegend {\n  border: 0; // 1\n  padding: 0; // 2\n}\n\n//////////////////////////////\n// Remove default vertical scrollbar in IE 8/9/10/11.\n//////////////////////////////\n\ntextarea {\n  overflow: auto;\n}\n\n//////////////////////////////\n// Align input and select text\n//////////////////////////////\n\ninput,\nselect {\n  vertical-align:middle;\n}\n\n//////////////////////////////////////////////////////////////////////////\n// Tables\n//////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////\n// Remove most spacing between table cells.\n//////////////////////////////\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n//////////////////////////////\n// Remove padding from table cell and table header\n//////////////////////////////\n\ntd,\nth {\n  padding: 0;\n}\n\n//////////////////////////////////////////////////////////////////////////\n// Kickstart\n//////////////////////////////////////////////////////////////////////////\n\n@import \"kickstart\";\n",
		"html {\n  @if mixin-exists('box-sizing') {\n    @include box-sizing('border-box');\n  }\n  @else {\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nembed,\nimg,\nobject,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n",
		"@mixin theme($theme-name: \"light\", $bg: \"bg1\") {\n  background-color: config-get(\"lolma-us.themes.#{$theme-name}.#{$bg}\");\n  color:            config-get(\"lolma-us.themes.#{$theme-name}.text\");\n\n  a:link {\n    text-decoration: underline;\n    color:           config-get(\"lolma-us.themes.#{$theme-name}.link.link\"); }\n\n  a:active {\n    text-decoration: underline;\n    color:           config-get(\"lolma-us.themes.#{$theme-name}.link.active\"); }\n\n  a:hover:not(:disabled) {\n    text-decoration: underline;\n    color:           config-get(\"lolma-us.themes.#{$theme-name}.link.hover\"); }\n\n  a:visited {\n    text-decoration: underline;\n    color:           config-get(\"lolma-us.themes.#{$theme-name}.link.visited\"); }\n\n  a, a.-disabled {\n    text-decoration: none;\n    color:           config-get(\"lolma-us.themes.#{$theme-name}.link.disabled\"); }\n\n  h1, h2, h3, h4, h5, h6 {\n    color:                     config-get(\"lolma-us.themes.#{$theme-name}.heading2\");\n    //text-shadow:     0 0 0.5px config-get(\"lolma-us.themes.#{$theme-name}.heading2\")\n\n    &.-callout {\n      color:                   config-get(\"lolma-us.themes.#{$theme-name}.heading1\");\n      text-shadow:   0 0 0.5px config-get(\"lolma-us.themes.#{$theme-name}.heading1\");\n\n      position: relative;\n      &:after {\n        content:  '';\n        position: absolute;\n        bottom:   0;\n        left:     0;\n        width:    100%;\n        box-shadow:    0 0 1px   config-get(\"lolma-us.themes.#{$theme-name}.heading1\");\n        border-bottom: 1px solid config-get(\"lolma-us.themes.#{$theme-name}.heading1\"); } } } }\n",
		"@import \"headings\";\n\n@mixin copy {\n\n  @include heading-sizes;\n\n  b, strong {\n    font-weight: bold; }\n\n  em, i {\n    font-style: italic; }\n\n  p, li, ul {\n    &:not(:last-child) {\n      margin-bottom: 1em; } }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-weight: bold;\n\n    &:not(:first-child) {\n      margin-top: 1em; }\n\n    h1 + &, h2 + &, h3 + &, h4 + &, h5 + &, h6 + & {\n      margin-top: 0; }\n\n    &:not(:last-child) {\n      margin-bottom: 0.3em; } }\n\n  ul {\n    margin-left: 2em; }\n\n  li {\n    list-style-type: disc; } }\n",
		"@mixin heading-sizes($min: 1.1em, $max: 2.2em) {\n\n  $increment: ($max - $min) / 5;\n\n  @for $i from 1 through 6 {\n    h#{$i} {\n      font-size: $max - $increment * ($i - 1); } } }\n",
		"@import \"app/pods/components/hero-header/style\";\n@import \"app/pods/components/locale-switcher/style\";\n@import \"app/pods/components/markdown-block/style\";\n@import \"app/pods/components/online-presence/style\";\n@import \"app/pods/components/pro-ject/style\";\n@import \"app/pods/components/pro-jects/style\";\n@import \"app/pods/components/project-group/style\";\n@import \"app/pods/components/sec-tion/style\";\n@import \"app/pods/components/star-button/style\";\n@import \"app/pods/components/time-line/style\";\n\n@import \"app/pods/locale/index/style\";\n",
		"@at-root {\n\n  @import \"app/styles/helpers/theme\";\n  @import \"node_modules/breakpoint-slicer/stylesheets/breakpoint-slicer\";\n\n\n\n  ////------------------------------------------\n  .heroHeader {\n    //------------------------------------------\n\n    // ----- Looks -----\n    @include theme(dark);\n    background-image:  url('/images/backgrounds/gplaypattern_@2X.png');\n    background-repeat: repeat;\n    background-size:   (376px / 2); }\n\n\n\n  ////------------------------------------------\n  .heroHeader-inner {\n    //------------------------------------------\n\n    // ----- Layout -----\n    display:         flex;\n    flex-direction:  column;\n\n    align-items:     center;\n    text-align:      center;\n\n    min-height:      100vh;\n    justify-content: space-between;\n\n    padding: 3rem 7%;\n\n    @include to(xs) {\n      padding-bottom: 1.5rem; }\n\n }    // ----- Content layout -----\n\n\n\n  ////------------------------------------------\n  .heroHeader-header {\n    //------------------------------------------\n\n    // ----- Content layout -----\n    .heroHeader-title {\n      margin-bottom: 1rem;\n\n      @include from(xs) {\n        margin-bottom: 1.5rem; }\n\n      @include from(l) {\n        margin-bottom: 2rem; } } }\n\n\n\n  ////------------------------------------------\n  .heroHeader-title {\n    //------------------------------------------\n\n    // ----- Text -----\n    color: white !important;\n\n    // ----- RWD -----\n    font-size:   1.5rem;\n    text-shadow: 0 0 1px white;\n\n    @include from(xs) {\n      font-size:   2.2rem;\n      text-shadow: 0 0 2px white; }\n\n    @include from(l) {\n      font-size: 3rem; } }\n\n\n\n  ////------------------------------------------\n  .heroHeader-subtitle {\n    //------------------------------------------\n\n    // ----- Text -----\n    font-family: 'Open Sans', sans-serif;\n    color:       #ddd !important;\n\n    // ----- Content layout -----\n    .heroHeader-subtitle-element {\n      @include to(s) {\n        display: block; } }\n\n    // ----- RWD -----\n    font-size: 1.2rem;\n\n    @include from(xs) {\n      font-size: 1.4rem; }\n\n    @include from(l) {\n      font-size: 1.7rem; } }\n\n\n\n  ////------------------------------------------\n  .heroHeader-avatar {\n    //------------------------------------------\n\n    // ----- Layout -----\n\n    // ----- Looks -----\n    border:           5px solid white;\n    background-color: white;\n    border-radius:    50%;\n    box-shadow:       0 0 2px white;\n\n    // ----- RWD -----\n    $width: 512px;\n    width:  ($width / 3);\n    height: ($width / 3);\n\n    @include from(xs) {\n      width:  ($width / 2.5);\n      height: ($width / 2.5); }\n\n    @include from(m) {\n      width:  ($width / 2);\n      height: ($width / 2); } }\n\n\n\n  ////------------------------------------------\n  .heroHeader-statement {\n    //------------------------------------------\n\n    // ----- Layout -----\n    max-width: 750px;\n\n    // ----- Text -----\n    color:     white !important;\n\n    // ----- RWD -----\n    font-size: 1.1rem;\n\n    @include from(xs) {\n      font-size: 1.3rem; }\n\n    @include from(l) {\n      font-size: 1.5rem; } } }\n",
		"// Default values\n@import \"breakpoint-slicer/variables\";\n\n// Helper functions\n@import \"breakpoint-slicer/helper-functions\";\n\n// The magic!\n@import \"breakpoint-slicer/mixins\";\n",
		"// The defaults\n$slicer-breakpoints: 0 400px 600px 800px 1010px !default;\n$slicer-breakpoint-names: () !default;\n$slicer-anti-overlap-corrections: 1px !default;\n",
		"// Returns a correction value for the given breakpoint\n// to prevent media query overlapping.\n//\n// Relies on the global variable $slicer-anti-overlap-corrections\n// that should contain a list of allowed correction values.\n//\n// Returns either only positive or only negative value.\n//\n// anti-overlap-correction($bp, $positive: true)\n//   - $bp       : a breakpoint, e. g. 800px or 20em\n//   - $positive : whether to return only positive or only negative values\n//                 * true - return only positive correction value (default)\n//                 * false - return only negative correction value\n@function anti-overlap-correction($bp, $positive: true) {\n  @each $correction in $slicer-anti-overlap-corrections {\n    @if (unit($bp) == unit($correction)) and (($correction > 0) == $positive) {\n      @return $correction; } }\n  @return 0; }\n\n\n// total-slices()\n//\n// Accepts no arguments.\n//\n// Returns total number of slices\n// (which is equal to total number of breakpoints).\n@function total-slices() {\n  @return length($slicer-breakpoints); }\n\n\n// left-bp-of-slice($slice)\n// - $slice : <slice number> A number of a slice. Should be positive integer.\n//\n// Returns the left breakpoint of an Nth slice, e. g. `600px`.\n@function left-bp-of-slice($slice) {\n  $slice: get-slice-id($slice);\n  $min: 1;\n  $max: total-slices();\n\n  // Making sure that the slice provided is valid\n  @if ($slice < $min) or ($slice > $max) {\n\n    @warn \"Wrong Slice number provided: #{$slice}. Should be between #{$min} and #{$max}.\"; }\n\n  @else {\n\n    $left: i am declared;\n\n    // Special treatment of the first slice...\n    @if $slice == 1 {\n      // ...to prevent a meaningless `min-width: 0` meida query\n      $left:  max-width; } // This is Breakpoint's syntax\n\n    @else {\n      // Returning the left edge of the slice\n      $left:  nth($slicer-breakpoints, $slice);\n      $left:  $left + anti-overlap-correction($left, true); }\n\n    @return $left; } }\n\n\n// right-bp-of-slice($slice)\n// - $slice : <slice number> A number of a slice. Should be positive integer.\n//\n// Returns the right breakpoint of an Nth slice, e. g. `800px`.\n@function right-bp-of-slice($slice) {\n  $slice: get-slice-id($slice);\n  $min: 1;\n  $max: total-slices() - 1;\n\n  // Making sure that the slice provided is valid\n  @if $max == total-slices() {\n    @warn \"Slice number provided: #{$slice}. It's the last slice, it has no right edge.\"; }\n  @else if ($slice < $min) or ($slice > $max) {\n    @warn \"Wrong column number provided: #{$slice}. Should be between #{$min} and #{$max}.\"; }\n  @else {\n    // Reading the right edge of the slice\n    $right-bp: nth($slicer-breakpoints, $slice + 1);\n    @return $right-bp + anti-overlap-correction($right-bp, false); } }\n\n\n// bp($slice)\n//\n// A shortcut for nth($slicer-breakpoints, $slice)\n@function bp($slice) {\n  @return nth($slicer-breakpoints, $slice); }\n\n\n// lbp($slice)\n//\n// A shortcut for left-bp-of-slice($slice)\n@function lbp($slice) {\n  @return left-bp-of-slice($slice); }\n\n\n// rbp($slice)\n//\n// A shortcut for right-bp-of-slice($slice)\n@function rbp($slice) {\n  @return right-bp-of-slice($slice); }\n\n\n// get-slice-id($slice-id-or-name)\n//\n// Returns a slice number corresponding to a slice name\n//\n// - $slice-id-or-name: <slice number or name> Should be either a number of a slice (positive integer)\n//                                             or a name of the slice from $slicer-breakpoint-names (string)\n@function get-slice-id($slice-id-or-name) {\n\n  // Treating the argument as a slice name.\n  // Retrieving slice id for given slice name\n  $slice-id: index($slicer-breakpoint-names, $slice-id-or-name);\n\n  // Checking whether a slice with the given name exists\n  @if $slice-id {\n    //@warn \"slice-id is truthful\"\n\n    // Return the id found\n    @return $slice-id; }\n  @else {\n    //@warn \"slice-id is falsy\"\n\n    // Assume an id was given in the first place\n    @return $slice-id-or-name; } }\n\n\n// prev-slice($slice-id-or-name)\n//\n// Returns previous slice id for the given slice\n@function prev-slice($slice-id-or-name) {\n\n  $slice-id: get-slice-id($slice-id-or-name);\n\n  @if $slice-id > 1 {\n    $slice-id: $slice-id - 1; }\n  @else {\n    @warn \"Previous slice for the first slice requested\"; }\n\n  @return $slice-id; }\n\n\n// next-slice($slice-id-or-name)\n//\n// Returns next slice id for the given slice\n@function next-slice($slice-id-or-name) {\n\n  $slice-id: get-slice-id($slice-id-or-name);\n\n  @if $slice-id < total-slices() {\n    $slice-id: $slice-id + 1; }\n  @else {\n    @warn \"Previous slice for the first slice requested\"; }\n\n  @return $slice-id; }\n",
		"////////////////////////////////////////////////\n// If you don't understand what's going on here,\n// please read the README first.\n////////////////////////////////////////////////\n\n// Wraps the content block provided with a media query\n// with min-width equal to the left edge of the left slice\n// and max-width equal to the right edge of the right slice\n//\n// between($slice-left, $slice-right, $no-query: false)\n// - $slice-left  : <slice number> A number of the left slice. Should be a positive integer.\n// - $slice-right : <slice number> A number of the left slice. Should be a positive integer.\n// - $no-query    : [<.class>]     A class to provide the no-query fallback (see Breakpoint docs).\n@mixin between($slice-left, $slice-right, $no-query: false) {\n\n  // Parsing slice names.\n  $slice-left: get-slice-id($slice-left);\n  $slice-right: get-slice-id($slice-right);\n\n  // If the slices provided are the first and the last one,\n  // the breakpoint becomes meaningless\n  @if ($slice-left == 1) and ($slice-right == total-slices()) {\n    //Thus, don't wrap the code block with a media query\n    @content; }\n\n  @else {\n\n    // Retrieving the left edge of the left slice\n    $context:   left-bp-of-slice($slice-left);\n\n    // Retrieving the right edge of the slice\n    // unless the slice is the last one\n    @if $slice-right < total-slices() {\n      $right:   right-bp-of-slice($slice-right);\n      $context: append($context, $right); }\n\n    // Setting the breakpoint\n    @include breakpoint($context, $no-query) {\n      @content; } } }\n\n\n// Wraps the content block provided with a media query\n// with min-width and max-width equal to the edges of a slice\n//\n// at($slice, $no-query: false)\n// - $slice : <slice number> A number of a slice. Should be a positive integer.\n// - $no-query    : [<.class>]     A class to provide the no-query fallback (see Breakpoint docs).\n@mixin at($slice, $no-query: false) {\n\n  @include between($slice, $slice, $no-query) {\n    @content; } }\n\n\n// Wraps the content block provided with a media query\n// with min-width equal to the right edge of a slice\n//\n// from($slice, $no-query: false)\n// - $slice : <slice number> A number of a slice. Should be a positive integer.\n// - $no-query    : [<.class>]     A class to provide the no-query fallback (see Breakpoint docs).\n@mixin from($slice, $no-query: false) {\n\n  @include between($slice, total-slices(), $no-query) {\n    @content; } }\n\n\n// Wraps the content block provided with a media query\n// with max-width equal to the right edge of a slice\n//\n// to($slice, $no-query: false)\n// - $slice : <slice number> A number of a slice. Should be a positive integer.\n// - $no-query    : [<.class>]     A class to provide the no-query fallback (see Breakpoint docs).\n@mixin to($slice, $no-query: false) {\n\n  @include between(1, $slice, $no-query) {\n    @content; } }\n\n\n",
		"@at-root {\n\n  ////------------------------------------------\n  .localeSwitcher {\n    //------------------------------------------\n\n    // ----- Layout -----\n    padding: 0 0.5em 0.1em;\n\n    // ----- Looks -----\n    background-color: white;\n    border-radius:    1rem;\n    cursor:           pointer;\n    text-decoration:  none;\n    color:            darkgrey;\n\n    // ----- Behavior -----\n    opacity: 0.6;\n    transition: opacity 0.4s;\n    &:hover {\n      opacity: 1; } } }\n",
		"@at-root {\n\n\n\n  ////------------------------------------------\n  .markdownBlock {\n    //------------------------------------------\n\n    // ----- Content layout -----\n    .markdownBlock-title + .markdownBlock-body {\n      margin-top: 1rem; } }\n\n\n\n  ////------------------------------------------\n  .markdownBlock-body {\n    //------------------------------------------\n\n } }    // ----- Text -----\n\n",
		"@at-root {\n\n  ////------------------------------------------\n  .onlinePresence {\n    //------------------------------------------\n\n    // ----- Layout -----\n    overflow: hidden;\n\n    // ----- Content layout -----\n    .onlinePresence-list {\n      margin-top: 1rem; } }\n\n\n\n  ////------------------------------------------\n  .onlinePresence-list {\n    //------------------------------------------\n\n    // ----- Layout -----\n    $margin:        1rem;\n    margin-right:   -$margin;\n    margin-bottom:  -$margin;\n\n    // ----- Layout -----\n    display:   flex;\n    flex-wrap: wrap;\n\n    .onlinePresence-item {\n      flex-basis:  300px;\n      flex-grow:   1;\n      flex-shrink: 1;\n\n      margin-right:  $margin;\n      margin-bottom: $margin; } }\n\n\n\n\n  ////------------------------------------------\n  .onlinePresence-item {\n    //------------------------------------------\n\n    // ----- Content layout -----\n    > * {\n      vertical-align: middle; } } }\n",
		"@at-root {\n\n  @import \"app/styles/helpers/copy\";\n\n\n\n  ////------------------------------------------\n  .proJect {\n    //------------------------------------------\n\n    // ----- Content layout -----\n    .proJect-description {\n      margin-top: 0.2rem; } }\n\n\n\n  ////------------------------------------------\n  .proJect-meta {\n    //------------------------------------------\n\n    // ----- Layout -----\n    display:     flex;\n    align-items: center;\n    flex-wrap:   wrap;\n\n    // ----- Content-layout -----\n    > * {\n      &:not(:last-child) {\n        margin-right: 0.5rem; } }\n\n    img {\n      display: block; } }\n\n\n\n  ////------------------------------------------\n  .proJect-description {\n    //------------------------------------------\n\n    // ----- Text -----\n    font-size: 0.8em;\n    @include copy; } }\n",
		"@at-root {\n\n  ////------------------------------------------\n  .proJects {\n    //------------------------------------------\n\n    // ----- Layout -----\n    .proJects-title {\n      margin-bottom: 0.5rem; }\n\n    .proJects-group-title {\n      margin-top:    2rem;\n      margin-bottom: 0.5rem; } }\n\n\n\n  ////------------------------------------------\n  .proJects-stalled {\n    //------------------------------------------\n\n    // ----- Looks -----\n    cursor: pointer;\n\n    // ----- Content layout -----\n    > * {\n      vertical-align: middle; } } }\n",
		"@at-root {\n\n\n\n  ////------------------------------------------\n  .projectGroup {\n    //------------------------------------------\n\n    // ----- Content layout -----\n    .projectGroup-project {\n      &:not(:last-child) {\n        margin-bottom: 1rem; } } } }\n",
		"@at-root {\n\n  ////------------------------------------------\n  .secTion {\n    //------------------------------------------\n\n    // ----- Layout -----\n    display:         flex;\n    justify-content: center;\n\n    // ----- Content layout -----\n    .secTion-inner {\n      max-width: 1200px;\n      flex-grow: 1; } }\n\n\n\n  ////------------------------------------------\n  .secTion-inner {\n    //------------------------------------------\n\n    // ----- Layout -----\n    $padding: 3%;\n    padding-left:  $padding;\n    padding-right: $padding; } }\n",
		"@at-root {\n\n  @import \"node_modules/sass-toolkit/stylesheets/toolkit/triangle\";\n\n\n\n  ////------------------------------------------\n  .starButton {\n    //------------------------------------------\n\n    // ----- Layout -----\n    display: inline-block;\n\n    // ----- Text -----\n    font-size: 10px;\n\n    // ----- Content layout -----\n    > * {\n      display: inline-block; }\n\n    .starButton-count {\n      margin-left: 5px; } }\n\n\n\n\n  ////------------------------------------------\n  .starButton-button {\n    //------------------------------------------\n\n    // ----- Layout -----\n    padding:         2px 5px 2px 4px;\n    white-space:     nowrap;\n\n    // ----- Looks -----\n    color:             #333 !important;\n    background-color:  #eee;\n    background-image:  linear-gradient(to bottom, #fcfcfc 0, #eee 100%);\n    background-repeat: no-repeat;\n    border:            1px solid #d5d5d5;\n    border-radius:     3px;\n    text-shadow:       0 1px 0 #fff;\n    text-decoration:   none !important;\n\n    // ----- Behavior -----\n    &.-disabled {\n      color:  #aaa !important;\n      cursor: default; }\n\n    &:not(.-disabled):hover {\n      background-color: #ddd  !important;\n      background-image: linear-gradient(to bottom, #eee 0, #ddd 100%);\n      border-color:     #ccc; } }\n\n\n\n  ////------------------------------------------\n  .starButton-count {\n    //------------------------------------------\n\n    // ----- Layout -----\n    padding:  2px 5px 2px 4px;\n    position: relative;\n\n    // ----- Looks -----\n    background-color: #fafafa;\n    border:           1px solid #d4d4d4;\n    color:            #333;\n    text-shadow:      0 1px 0 #fff;\n    white-space:      nowrap;\n    border-radius:    3px;\n\n    $height: 8px;\n    $width:  5px;\n\n    &:before, &:after {\n      display: block;\n      content: '';\n      position: absolute;\n      top:      50%;\n      right:    100%;\n      transform: translate(0, -50%); }\n\n    &:before {\n      @include triangle(#d4d4d4, $height, $width, left); }\n\n    &:after {\n      @include triangle(#fafafa, $height, $width, left);\n      margin-right: -2px; } } }\n\n",
		"//////////////////////////////\n// Draw triangles\n//////////////////////////////\n\n@mixin triangle($color: null, $height: null, $width: null, $angle: null) {\n\n  $color: if($color != null, $color, toolkit-get('triangle color'));\n  $height: if($height != null, $height, toolkit-get('triangle height'));\n  $width: if($width != null, $width, toolkit-get('triangle width'));\n  $angle: if($angle != null, $angle, toolkit-get('triangle angle'));\n\n  @if nth($angle, 1) == \"top\" or nth($angle, 1) == \"bottom\" {\n    $angle: \"#{$angle}\";\n  }\n\n  @if $angle == \"top\" {\n    $angle: 0;\n  }\n  @if $angle == \"top right\" {\n    $angle: 45 * 7;\n  }\n  @if $angle == \"right\" {\n    $angle: 45 * 2;\n  }\n  @if $angle == \"bottom right\" {\n    $angle: 45 * 1;\n  }\n  @if $angle == \"bottom\" {\n    $angle: 45 * 4;\n  }\n  @if $angle == \"bottom left\" {\n    $angle: 45 * 3;\n  }\n  @if $angle == \"left\" {\n    $angle: 45 * 6;\n  }\n  @if $angle == \"top left\" {\n    $angle: 45 * 5;\n  }\n\n  @if unit($height) == \"\" or unit($height) == \"%\" {\n    @debug \"in triangle #{$height} is not a compatible unit for height.\"\n  }\n\n  @if unit($width) == \"\" or unit($width) == \"%\" {\n    @debug \"in triangle #{$width} is not a compatible unit for width.\"\n  }\n\n  // offset 45deg to make each side start at 0\n  $deg: $angle + 45;\n  // if units, remove units\n  @if unit($deg) == deg {\n    $deg: $deg / 1deg;\n  }\n  // shift to be on a scale from 0 to 90.\n  @while $deg > 90 {\n    $deg: $deg - 90;\n  }\n  @while $deg < 0 {\n    $deg: $deg + 90;\n  }\n  // Get a ratio of 90 to multiply by.\n  $deg: $deg / 90;\n\n  // make sure metrics are reset\n  display: block;\n  width: 0;\n  height: 0;\n  border: 0 solid transparent;\n\n  // run through sides\n  @if $angle <= 45 or $angle > 315 {\n    border-bottom-color: $color;\n    border-width: 0 ($width * abs($deg - 1)) $height ($width * $deg);\n  }\n  @if $angle > 45 and $angle <= 135 {\n    border-left-color: $color;\n    border-width: ($height * $deg) 0 ($height * abs($deg - 1)) $width;\n  }\n  @if $angle > 135 and $angle <= 225 {\n    border-top-color: $color;\n    border-width: $height ($width * $deg) 0 ($width * abs($deg - 1));\n  }\n  @if $angle > 225 and $angle <= 315 {\n    border-right-color: $color;\n    border-width: ($height * abs($deg - 1)) $width ($height * $deg) 0;\n  }\n}",
		"@at-root {\n\n  @import \"node_modules/sass-toolkit/stylesheets/toolkit/triangle\";\n\n\n\n  $icon-size:         25px;\n  $border-width:      1px;\n  $icon-inner-size:   $icon-size - 2 * $border-width;\n  $border-color:      grey;\n  $arrow-width:       9px;\n  $arrow-offset:      floor($icon-inner-size / 2) - floor($arrow-width / 2);\n\n\n\n  ////------------------------------------------\n  .timeLine-list {\n    //------------------------------------------\n\n    // ----- Layout -----\n    overflow:       hidden;\n    position:       relative;\n    padding-bottom: 0.5rem;\n\n    // ----- Content layout -----\n    .timeLine-title {\n      margin-bottom: 0.5rem; }\n\n    .timeLine-item {\n      &:not(:last-child) {\n        margin-bottom: 1rem; } }\n\n    &:after {\n      content:     '';\n      position:    absolute;\n      left:        $arrow-offset + $border-width;\n      bottom:      0;\n      @include triangle($border-color, 6px, $arrow-width, bottom); } }\n\n\n  ////------------------------------------------\n  .timeLine-item {\n    //------------------------------------------\n\n    // ----- Layout -----\n    display:         flex;\n    justify-content: flex-start;\n    align-items:     center;\n\n    // ----- Content layout -----\n    .timeLine-item-icon {\n      flex-shrink:  0;\n      margin-right: 1rem; }\n\n    .timeLine-item-info {\n      flex-grow: 1; } }\n\n\n\n  ////------------------------------------------\n  .timeLine-item-icon {\n    //------------------------------------------\n\n    // ----- Layout -----\n    width:        $icon-size;\n    height:       $icon-size;\n    border-width: $border-width;\n    line-height:  $icon-inner-size;\n    text-align:   center;\n    position:     relative;\n    z-index:      2;\n\n    // ----- Looks -----\n    border-color:     $border-color;\n    border-style:     solid;\n    border-radius:    50%;\n    background-color: white;\n\n    // ----- Content layout -----\n    .timeLine-item-icon-icon {\n      font-size:      1rem; }\n\n    .timeLine-item:not(:last-child) &:after {\n      content:     '';\n      position:    absolute;\n      width:       0;\n      height:      1000px;\n      border-left: 1px solid $border-color;\n      left:        floor($icon-inner-size / 2);\n      top:         100%; }\n\n    .timeLine-item:not(:first-child) &:before {\n      content:     '';\n      position:    absolute;\n      left:        $arrow-offset;\n      bottom:      100%;\n      @include triangle($border-color, 6px, $arrow-width, bottom); } }\n\n\n\n  ////------------------------------------------\n  .timeLine-item-date {\n    //------------------------------------------\n\n    // ----- Text -----\n    font-size: 0.8em;\n    color:     config-get('lolma-us.themes.light.label'); } }\n",
		"@at-root {\n\n  @import \"node_modules/breakpoint-slicer/stylesheets/breakpoint-slicer\";\n\n\n\n  ////------------------------------------------\n  .route-localeIndex {\n    //------------------------------------------\n\n    // ----- Layout -----\n    position: relative;\n\n    // ----- Content layout -----\n    .route-localeIndex-localeSwitcher {\n      position: fixed;\n      top:      1rem;\n      right:    1rem; } }\n\n\n  ////------------------------------------------\n  .route-localeIndex-cards {\n    //------------------------------------------\n\n    // ----- Layout -----\n    overflow: hidden; }\n\n\n\n  ////------------------------------------------\n  .route-localeIndex-cards-inner {\n    //------------------------------------------\n\n    // ----- Layout -----\n    $padding:       5%;\n    padding-top:    $padding;\n    padding-bottom: $padding;\n\n    $margin:        4rem;\n    margin-right:   -$margin;\n    margin-bottom:  -$margin;\n\n    // ----- Layout -----\n    display:   flex;\n    flex-wrap: wrap;\n\n    .route-localeIndex-card {\n      flex-basis:  400px;\n      flex-grow:   1;\n      //flex-shrink: 0\n\n      margin-right:  $margin;\n      margin-bottom: $margin; } }\n\n\n\n  ////------------------------------------------\n  .route-localeIndex-footer {\n    //------------------------------------------\n\n    // ----- Layout -----\n    $padding:       1rem;\n    padding-top:    $padding;\n    padding-bottom: $padding; } }\n"
	],
	"mappings": "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",
	"names": []
}